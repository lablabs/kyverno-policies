{{- $name := "checkServiceAccount" }}
{{- $category := "sample" }}
{{- $policyValues := get .Values.policies $name }}
{{- $categoryValues := get .Values.policyCategories $category }}

{{- if include "kyverno-policies.enabled" (list $name $category $) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ kebabcase $name }}
  annotations:
{{- with $policyValues.autogenControllers }}
    pod-policies.kyverno.io/autogen-controllers: {{ . }}
{{- end }}
    policies.kyverno.io/title: Check ServiceAccount
    policies.kyverno.io/category: {{ $category }}
    policies.kyverno.io/subject: Pod,ServiceAccount
    kyverno.io/kyverno-version: 1.6.0
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.21"
    policies.kyverno.io/description: >-
      ServiceAccounts with privileges to create Pods may be able to do so and name
      a ServiceAccount other than the one used to create it. This policy checks the
      Pod, if created by a ServiceAccount, and ensures the `serviceAccountName` field
      matches the actual ServiceAccount.
spec:
{{ include "kyverno-policies.policySettings" (list $name $category $) }}
  rules:
{{- if $policyValues.rulesOverride }}
{{ toYaml $policyValues.rulesOverride | indent 4 }}
{{- else }}
    - name: check-sa
      match:
        any:
          - resources:
              kinds:
                - Pod
{{- if $policyValues.exclude }}
      exclude: {{ toYaml $policyValues.exclude | nindent 8 }}
{{- end }}
      preconditions:
        all:
          - key: "{{`{{serviceAccountName}}`}}"
            operator: Equals
            value: "*?"
      validate:
        message: "The ServiceAccount used to create this Pod is confined to using the same account when running the Pod."
        pattern:
          spec:
            serviceAccountName: "{{`{{serviceAccountName}}`}}"
{{- end }}
{{- end }}
