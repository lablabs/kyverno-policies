{{- $name := "disallowPrivilegeEscalation" }}
{{- $category := "podSecurityRestricted" }}
{{- $values := get .Values.policies $name }}
{{- $categoryValues := get .Values.policyCategories $category }}

{{- if or $values.enabled $categoryValues.enabled }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: disallow-privilege-escalation
  annotations:
{{- with $values.autogenControllers }}
    pod-policies.kyverno.io/autogen-controllers: {{ . }}
{{- end }}
    policies.kyverno.io/title: Disallow Privilege Escalation
    policies.kyverno.io/category: Pod Security Standards (Restricted)
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.6.0
    kyverno.io/kubernetes-version: "1.22-1.23"
    policies.kyverno.io/description: >-
      Privilege escalation, such as via set-user-ID or set-group-ID file mode, should not be allowed.
      This policy ensures the `allowPrivilegeEscalation` field is set to `false`.
spec:
  validationFailureAction: {{ coalesce $values.validationFailureAction $categoryValues.validationFailureAction "Audit" }}
  background: {{ coalesce $values.background $categoryValues.background "true" }}
  rules:
{{- if $values.rulesOverride }}
{{ toYaml $values.rulesOverride | indent 4 }}
{{- else }}
    - name: privilege-escalation
      match:
        any:
          - resources:
              kinds:
                - Pod
{{- if $values.exclude }}
      exclude: {{ toYaml $values.exclude | nindent 8 }}
{{- end }}
      validate:
        message: >-
          Privilege escalation is disallowed. The fields
          spec.containers[*].securityContext.allowPrivilegeEscalation,
          spec.initContainers[*].securityContext.allowPrivilegeEscalation,
          and spec.ephemeralContainers[*].securityContext.allowPrivilegeEscalation
          must be set to `false`.
        pattern:
          spec:
            =(ephemeralContainers):
              - securityContext:
                  allowPrivilegeEscalation: "false"
            =(initContainers):
              - securityContext:
                  allowPrivilegeEscalation: "false"
            containers:
              - securityContext:
                  allowPrivilegeEscalation: "false"
{{- end }}
{{- end }}