{{- $name := "preventNakedPods" }}
{{- $category := "other" }}
{{- $policyValues := get .Values.policies $name }}
{{- $categoryValues := get .Values.policyCategories $category }}

{{- if and (or $policyValues.enabled $categoryValues.enabled .Values.enableAll) (not (or $policyValues.disabled $categoryValues.disabled)) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ kebabcase $name }}
  annotations:
    policies.kyverno.io/title: Prevent Naked Pods
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/category: {{ $category }}, EKS Best Practices
    policies.kyverno.io/severity: medium
    kyverno.io/kyverno-version: 1.7.0
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Pods not created by workload controllers such as Deployments
      have no self-healing or scaling abilities and are unsuitable for production.
      This policy prevents such "naked" Pods from being created unless they originate
      from a higher-level workload controller of some sort.
spec:
  validationFailureAction: {{ coalesce $policyValues.validationFailureAction $categoryValues.validationFailureAction .Values.validationFailureAction }}
  validationFailureActionOverrides: {{ toYaml (coalesce $policyValues.validationFailureActionOverrides $categoryValues.validationFailureActionOverrides .Values.validationFailureActionOverrides) | nindent 4 }}
{{- if hasKey $policyValues "background" }}
  background: {{ $policyValues.background }}
{{- else if hasKey $categoryValues "background" }}
  background: {{ $categoryValues.background }}
{{- else }}
  background: {{ .Values.background }}
{{- end }}
  failurePolicy: {{ coalesce $policyValues.failurePolicy $categoryValues.failurePolicy .Values.failurePolicy }}
  rules:
{{- if $policyValues.rulesOverride }}
{{ toYaml $policyValues.rulesOverride | indent 4 }}
{{- else }}
    - name: naked-pods
      match:
        any:
          - resources:
              kinds:
                - Pod
{{- if $policyValues.exclude }}
      exclude: {{ toYaml $policyValues.exclude | nindent 8 }}
{{- end }}
      preconditions:
        all:
          - key: "{{`{{request.operation || 'BACKGROUND'}}`}}"
            operator: NotEquals
            value: DELETE
      validate:
        message: "Naked Pods are not allowed. They must be created by Pod controllers."
        deny:
          conditions:
            any:
              - key: ownerReferences
                operator: AnyNotIn
                value: "{{`{{request.object.metadata.keys(@)}}`}}"
{{- end }}
{{- end }}