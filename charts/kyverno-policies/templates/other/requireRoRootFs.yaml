{{- $name := "requireRoRootFs" }}
{{- $category := "other" }}
{{- $values := get .Values.policies $name }}
{{- $categoryValues := get .Values.policyCategories $category }}

{{- if or $values.enabled $categoryValues.enabled }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: require-ro-rootfs
  annotations:
{{- with $values.autogenControllers }}
    pod-policies.kyverno.io/autogen-controllers: {{ . }}
{{- end }}
    policies.kyverno.io/title: Require Read-Only Root Filesystem
    policies.kyverno.io/category: Best Practices, EKS Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      A read-only root file system helps to enforce an immutable infrastructure strategy;
      the container only needs to write on the mounted volume that persists the state.
      An immutable root filesystem can also prevent malicious binaries from writing to the
      host system. This policy validates that containers define a securityContext
      with `readOnlyRootFilesystem: true`.
spec:
  validationFailureAction: {{ coalesce $values.validationFailureAction $categoryValues.validationFailureAction "Audit" }}
  background: {{ coalesce $values.background $categoryValues.background "true" }}
  rules:
{{- if $values.rulesOverride }}
{{ toYaml $values.rulesOverride | indent 4 }}
{{- else }}
    - name: validate-readOnlyRootFilesystem
      match:
        any:
          - resources:
              kinds:
                - Pod
{{- if $values.exclude }}
      exclude: {{ toYaml $values.exclude | nindent 8 }}
{{- end }}
      validate:
        message: "Root filesystem must be read-only."
        pattern:
          spec:
            containers:
              - securityContext:
                  readOnlyRootFilesystem: true
{{- end }}
{{- end }}